[include mainsail.cfg]
# Teaching Tech configuration to suit standard Creality V2.4 8 bit mainboard and Fluidd
# Based on:
# https://github.com/KevinOConnor/klipper/blob/master/config/printer-creality-ender3max-2021.cfg
# Please ensure you PID autotune your heaters rather than just using my PID values!
# You will also need to substitute your own serial address after sending ls /dev/serial/by-id/* via SSH
# This machine has a Hemera extruder, so thermistor and rotation_distance values will be different to standard.
# This machine also is fitted with a BLtouch so X,Y & Z offsets will need to be calibrated too.

# DO NOT COPY THIS FILE WITHOUT CAREFULLY READING AND UPDATING IT
# FIRST. Incorrectly configured parameters may cause damage.

# See docs/Config_Reference.md for a description of parameters.

# [gcode_macro BED_TEMP]
# gcode:
#   set BED_TEMP = params.BED_TEMP

# [gcode_macro EXTRUDER_TEMP]
# gcode:
#   set EXTRUDER_TEMP = params.EXTRUDER_TEMP

[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    RESPOND MSG='bed temp variale: {BED_TEMP}'
    RESPOND MSG='extrude variale: {EXTRUDER_TEMP}'

    # Start bed heating
    M140 S{BED_TEMP}
    #PreHeat Nozzle to 150C
    M104 S150
    # Use absolute coordinates
    G90
    # Reset the G-Code Z offset (adjust Z offset if needed)
    SET_GCODE_OFFSET Z=-0.01
    # Home the printer
    G28
    # Wait for bed to reach temperature
    M190 S{BED_TEMP}

    # CHOICE: Load bed mesh or fresh probe
    # Load Bed Mesh Profile
    BED_MESH_PROFILE LOAD=default
    # Probe new bed mesh level
    #BED_MESH_CALIBRATE

    # Move the nozzle near the bed
    #G1 Z5 F3000
    # Move the nozzle very close to the bed
    #G1 Z0.15 F300
    # Set and wait for nozzle to reach temperature
    RESPOND MSG='Set and wait for nozzle to reach temp: {EXTRUDER_TEMP}'
    M109 S{EXTRUDER_TEMP}
    # Cura's Prime Line
    G92 E0 ;Reset Extruder
    G1 X10.1 Y25 Z0.28 F5000.0 ;Move to start position
    G1 X10.1 Y200.0 Z0.28 F1500.0 E15 ;Draw the first line
    G1 X10.4 Y200.0 Z0.28 F5000.0 ;Move to side a little
    G1 X10.4 Y25 Z0.28 F1500.0 E20 ;Draw the second line
    G92 E0 ;Reset Extruder
    G1 Z2.0 F3000 ;Move Z Axis up


[gcode_macro END_PRINT]
gcode:
    {% set YTOOL_MAX = printer.toolhead.axis_maximum.y %}  
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Move nozzle away from print while retracting
    G91
    G1 X-2 Y-2 E-3 F300
    # Raise nozzle by 10mm
    G1 Z10 F3000
    G90
    G1 X0 Y{YTOOL_MAX}
    # Disable steppers
    M84

[stepper_x]
step_pin: ar54
dir_pin: ar55
enable_pin: !ar38
microsteps: 16
rotation_distance: 40
endstop_pin: ^ar3
position_endstop: 0
position_max: 450
homing_speed: 50

[stepper_y]
step_pin: ar60
dir_pin: !ar61
enable_pin: !ar56
microsteps: 16
rotation_distance: 40
endstop_pin: ^ar14
position_endstop: 0
position_max: 450
homing_speed: 50

[stepper_z]
step_pin: ar46
dir_pin: !ar48
enable_pin: !ar62
microsteps: 16
rotation_distance: 8
#position_endstop: 0.0                     # disable to use BLTouch
#endstop_pin: ^ar18                         # disable to use BLTouch
endstop_pin: probe:z_virtual_endstop    # enable to use BLTouch
position_min: -5                        # enable to use BLTouch
position_max: 470


[input_shaper]
#But apparently below 23 is not useful?
shaper_freq_x: 18.75 #100*3/16=18.75  #TT ex: 33.33
shaper_freq_y: 18.18 #100*2/11        #TT ex: 22.86
shaper_type: mzv

[safe_z_home]                         # enable for BLTouch
home_xy_position: 150, 150
speed: 100
z_hop: 10
z_hop_speed: 5

[bltouch]                             # enable for BLTouch - fast-mode
sensor_pin: ^ar19
control_pin: ar11
pin_up_reports_not_triggered: True
pin_up_touch_mode_reports_triggered: True
probe_with_touch_mode: True
stow_on_each_sample: false
x_offset: -27                         # modify as needed for bltouch location
y_offset: 0                           # modify as needed for bltouch location
#z_offset: 1                           # modify as needed for bltouch or run PROBE_CALIBRATE
speed: 10
samples: 2
sample_retract_dist: 5.0              # Can be set lower, example 2.5 depending on height of bltouch from bed
lift_speed: 40
samples_tolerance_retries: 3
samples: 2

[bed_mesh]                            # enable for BLTouch
speed: 150
mesh_min: 50, 50
mesh_max: 400, 400
algorithm: bicubic
probe_count: 7,7                     # 49 points due to large bed size
horizontal_move_z: 6

[gcode_macro G29]                    # If moving from marlin to klipper uncomment to mimic G29
gcode:
  BED_MESH_CALIBRATE

[gcode_macro M420_S1]                    # If moving from marlin to klipper uncomment to mimic G29
gcode:
  BED_MESH_PROFILE LOAD=default
  
[extruder]
max_extrude_only_distance: 100.0
step_pin: ar26
dir_pin: ar28
enable_pin: !ar24
microsteps: 16
rotation_distance: 22.857           # Calibrate - see https://github.com/KevinOConnor/klipper/blob/master/docs/Rotation_Distance.md
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: ar10
sensor_type: EPCOS 100K B57560G104F
sensor_pin: analog13
min_temp: 0
max_temp: 280
pressure_advance: 0.32               # Calibrate - see https://github.com/KevinOConnor/klipper/blob/master/docs/Pressure_Advance.md

[firmware_retraction]
retract_length: 1
retract_speed: 60
unretract_extra_length: 0
#unretract_speed: 10

[controller_fan bed_psu]
pin: !ar15
heater: heater_bed
stepper: extruder
idle_timeout: 20

[controller_fan mainboard_fan]
pin: !ar12
#heater: extruder
idle_timeout: 20

[heater_fan my_nozzle_fan]
pin: !analog11
heater: extruder
heater_temp: 50.0

[heater_bed]
heater_pin: ar8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: analog14
min_temp: 0
max_temp: 120

[fan]
pin: ar9

[virtual_sdcard]
path: /home/pi/Cr10Max_data/gcodes

[pause_resume]

[display_status]

[filament_switch_sensor e0_sensor]
pause_on_runout: True
runout_gcode:
    M600 ; pause macro
switch_pin: ar2

[temperature_sensor raspberry_pi]
sensor_type: temperature_host

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-1 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state



[mcu]
serial: /dev/serial/by-id/usb-FTDI_FT232R_USB_UART_AB0K56TU-if00-port0
#pin_map: arduino

[printer]
kinematics: cartesian
max_velocity: 200
max_accel: 4000
max_accel_to_decel: 4000
max_z_velocity: 5
max_z_accel: 100
square_corner_velocity: 5

#[display]
#lcd_type: st7920
#cs_pin: PB12
#sclk_pin: PB13
#sid_pin: PB15
#encoder_pins: ^PB14, ^PB10
#click_pin: ^!PB2

[screws_tilt_adjust]
screw1: 65, 45
screw1_name: front left screw
screw2: 450, 45
screw2_name: front right screw
screw3: 450, 430
screw3_name: rear right screw
screw4: 65, 430
screw4_name: rear left screw
horizontal_move_z: 10.
speed: 50.
screw_thread: CW-M3

[delayed_gcode bed_mesh_init]
initial_duration: .01
gcode:
  BED_MESH_PROFILE LOAD=default
  
[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE
  END_PRINT

[exclude_object]

[gcode_macro M486]
gcode:
  # Parameters known to M486 are as follows:
  #   [C<flag>] Cancel the current object
  #   [P<index>] Cancel the object with the given index
  #   [S<index>] Set the index of the current object.
  #       If the object with the given index has been canceled, this will cause
  #       the firmware to skip to the next object. The value -1 is used to
  #       indicate something that isn’t an object and shouldn’t be skipped.
  #   [T<count>] Reset the state and set the number of objects
  #   [U<index>] Un-cancel the object with the given index. This command will be
  #       ignored if the object has already been skipped

  {% if 'exclude_object' not in printer %}
    {action_raise_error("[exclude_object] is not enabled")}
  {% endif %}

  {% if 'T' in params %}
    EXCLUDE_OBJECT RESET=1

    {% for i in range(params.T | int) %}
      EXCLUDE_OBJECT_DEFINE NAME={i}
    {% endfor %}
  {% endif %}

  {% if 'C' in params %}
    EXCLUDE_OBJECT CURRENT=1
  {% endif %}

  {% if 'P' in params %}
    EXCLUDE_OBJECT NAME={params.P}
  {% endif %}

  {% if 'S' in params %}
    {% if params.S == '-1' %}
      {% if printer.exclude_object.current_object %}
        EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
      {% endif %}
    {% else %}
      EXCLUDE_OBJECT_START NAME={params.S}
    {% endif %}
  {% endif %}

  {% if 'U' in params %}
    EXCLUDE_OBJECT RESET=1 NAME={params.U}
  {% endif %}


[gcode_macro TEST_ECHO_VARS]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    {% set Y_MAX = [stepper_y].position_max %} 
    {% set YTOOL_MAX = printer.toolhead.axis_maximum.y %}  
    RESPOND MSG='hello. this is a message'
    RESPOND MSG='y_max variale: {Y_MAX}, it should be 450.'
    RESPOND MSG='y_max variale: {YTOOL_MAX}, it should be 450.'
    RESPOND MSG='bed temp variale: {BED_TEMP}, it should be 60.'
    RESPOND MSG='extrude variale: {EXTRUDER_TEMP}, it should be 190.'
    RESPOND TYPE=error MSG='Error message'
    RESPOND TYPE=command MSG='Command message'
    
[respond]
#default_type: echo
#   Sets the default prefix of the "M118" and "RESPOND" output to one
#   of the following:
#       echo: "echo: " (This is the default)
#       command: "// "
#       error: "!! "
#default_prefix: echo:
#   Directly sets the default prefix. If present, this value will
#   override the "default_type".
#RESPOND TYPE=error MSG='Error message'


[board_pins arduino-mega]
aliases:
  ar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,
  ar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,
  ar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,
  ar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,
  ar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,
  ar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,
  ar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,
  ar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,
  ar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,
  ar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,
  ar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,
  ar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,
  ar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,
  ar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,
  analog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,
  analog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,
  analog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,
  analog15=PK7, ml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,
  ml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,
  ml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,
  ml85=PH7

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 34.637
#*# pid_ki = 2.332
#*# pid_kd = 128.590
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 70.936
#*# pid_ki = 1.614
#*# pid_kd = 779.407
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.076250, 0.046250, -0.011250, -0.065000, -0.078750, -0.113750, -0.116250
#*# 	0.157500, 0.115000, 0.115000, 0.111250, 0.060000, -0.000000, -0.086250
#*# 	0.186250, 0.161250, 0.181250, 0.157500, 0.082500, -0.023750, -0.075000
#*# 	0.233750, 0.162500, 0.147500, 0.091250, 0.046250, -0.010000, -0.063750
#*# 	0.186250, 0.130000, 0.097500, 0.052500, 0.010000, -0.040000, -0.080000
#*# 	0.180000, 0.135000, 0.101250, 0.055000, 0.031250, -0.000000, -0.063750
#*# 	0.131250, 0.078750, 0.027500, 0.011250, -0.033750, -0.037500, -0.035000
#*# tension = 0.2
#*# min_x = 50.0
#*# algo = bicubic
#*# y_count = 7
#*# mesh_y_pps = 2
#*# min_y = 50.0
#*# x_count = 7
#*# max_y = 399.98
#*# mesh_x_pps = 2
#*# max_x = 399.98
#*#
#*# [bltouch]
#*# z_offset = 2.389
